#!/usr/bin/env bash

# Functions
scalevideo()
{
  ffmpeg -hwaccel vaapi -vaapi_device /dev/dri/renderD128 -i "${POSITIONAL_ARGS[0]}" -vf "hwupload,scale_vaapi=w=${scalew}:h=${scaleh}:format=nv12" -c:v hevc_vaapi -qp 34 "${stripname}-scaled.mkv"
  exit 0
}

mergeaudio()
{
  ffmpeg -i "${POSITIONAL_ARGS[0]}" -i "${POSITIONAL_ARGS[1]}" -filter_complex "[0:a][1:a]amerge=inputs=2[a]" -map 0:v -map "[a]" -c:v copy -c:a flac -ac 2 "${stripname}-merged.mkv"
  exit 0
}

cutvideo()
{
  ffmpeg -i "${POSITIONAL_ARGS[0]}" -ss "${startframe}" -to "${endframe}" -c copy "${stripname}-cut.mkv"
  exit 0
}

fadevideo()
{
  ffmpeg -hwaccel vaapi -vaapi_device /dev/dri/renderD128 -i "${POSITIONAL_ARGS[0]}" -vf "fade=t=in:st=0:d=0.5,fade=t=out:st=${fadeoutlen}:d=0.5,format=nv12,hwupload" -c:v hevc_vaapi -c:a copy "${stripname}-faded.mkv"
  exit 0
}

helpmsg()
{
  echo -e "[-s] - scale video \
    \n[-m] - merge video and audio \
    \n[-c] - cut video \
    \n[-f] - fade in and out video"
	exit 1
}

# Get Arguments
singleflag=0
POSITIONAL_ARGS=()
while [[ $# -gt 0 ]]; do
	case $1 in
	  -m|--merge) merger=true
  		((singleflag += 1))
      shift
	    ;;
	  -s|--scale) scaler=true
  		((singleflag += 1))
      shift
	    ;;
	  -c|--cut) cutter=true
  		((singleflag += 1))
	    shift
	    ;;
	  -f|--fade) fader=true
  		((singleflag += 1))
	    shift
	    ;;
	-* | --*) helpmsg ;;
	*)
		POSITIONAL_ARGS+=("$1")
		shift
		;;
	esac
done

set -- "${POSITIONAL_ARGS[@]}"

# Static Variable
stripname=$(echo "${POSITIONAL_ARGS[0]}" | rev | cut -b 5- | rev) # Hard strip for 3 letter ext
videolen=$(ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 "${POSITIONAL_ARGS[0]}" | cut -b -4)
fadeoutlen=$(echo "scale=2; ${videolen} - 0.5" | bc)

# Flag Check
[ $singleflag = 1 ] || helpmsg

# Print Debug Info
echo ">> Debug Info"
echo ">> arg0: ${POSITIONAL_ARGS[0]}"
echo ">> arg1: ${POSITIONAL_ARGS[1]}"
echo ">> arg2: ${POSITIONAL_ARGS[2]}"
echo ">> strip: $stripname"
echo ">> res: $scaleres"
echo ">> videolen: $videolen"
echo ">> fadeoutlen: $fadeoutlen"
echo ">> scaler: $scaler merger: $merger cut: $cutter fade: $fader"
echo

# Main Program
[ $merger ] && mergeaudio
[ $fader ] && fadevideo
[ $scaler ] && {
  scalew="${POSITIONAL_ARGS[1]}"
  scaleh="${POSITIONAL_ARGS[2]}"
  [ -z "${POSITIONAL_ARGS[1]}" ] && {
    read -r -p "New video width (1280): " scalew
    read -r -p "New video height (720): " scaleh
  }
  [ -z "$scalew" ] && scalew=1280
  [ -z "$scaleh" ] && scaleh=720
  scalevideo 
}
[ $cutter ] && {
  startframe="${POSITIONAL_ARGS[1]}"
  endframe="${POSITIONAL_ARGS[2]}"
  [ -z "${POSITIONAL_ARGS[1]}" ] && [ -z "${POSITIONAL_ARGS[2]}" ] && {
    read -r -p "Starting point for cut [hh:mm:ss.mmm] (0): " startframe
    read -r -p "Ending point for cut [hh:mm:ss.mmm] (length): " endframe
  }
  [ -z "$startframe" ] && startframe=0
  [ -z "$endframe" ] && endframe="${videolen}"
  cutvideo
}
